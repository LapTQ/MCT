@startuml

actor Manager as A
boundary ViewCamerasBoundary as B
control ManageStaffsController as C
entity Monitor
entity Queue
entity CameraPipeline
entity MCMapPipeline
entity VisualizePipeline

A -> B: choose to \n view cameras
B -> B: validate_current_user()
A -> B: submit()
B -> C: view_cameras(session_id)

C -> Monitor: register_display(\n session_id,\n cam_id)
Monitor -> Monitor: is_started()
alt cam_id not in Monitor.pl_visualize
    Monitor -> Queue: <<create>>(id)
    Monitor -> CameraPipeline: add_output_queue(key, queue)
    Monitor -> Queue: <<create>>(id)
    Monitor -> MCMapPipeline: add_output_queue(key, queue)
    Monitor -> VisualizePipeline: <<create>>(iq_annot, iq_video)
    Monitor ->> VisualizePipeline: start()
end
Monitor -> Queue: <<create>>(id)
Monitor -> VisualizePipeline: add_output_queue(key, queue)
C <-- Monitor: Queue
B <-- C: List<Generator>


@enduml
